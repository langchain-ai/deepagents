[project]
name = "deepagents"
version = "0.2.0"
description = "General purpose 'deep agent' with sub-agent spawning, todo list capabilities, and mock file system. Built on LangGraph."
readme = "README.md"
license = { text = "MIT" }
requires-python = ">=3.11,<4.0"
dependencies = [
    "langchain-anthropic>=1.0.0,<2.0.0",
    "langchain>=1.0.0,<2.0.0",
    "langchain-core>=1.0.0,<2.0.0",
    "wcmatch"
]

[dependency-groups]
test = [
    "pytest",
    "pytest-cov",
    "langchain-openai",
]
lint = [
    "ruff>=0.12.2,<0.13.0",
]
typing = [
    "ty",
]
dev = [
    { include-group = "test" },
    { include-group = "lint" },
    { include-group = "typing" },
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/deepagents"]

[tool.hatch.build.targets.wheel.force-include]
"src/deepagents/py.typed" = "deepagents/py.typed"

[tool.ruff]
line-length = 150
# Exclude any files that shouldn't be linted
exclude = []

[tool.ruff.format]
docstring-code-format = true  # Formats code blocks in docstrings

[tool.ruff.lint]
select = [
    "ALL"  # Enable all rules by default
]
ignore = [
    "COM812",  # Messes with the formatter
    "ISC001",  # Messes with the formatter
    "PERF203", # Rarely useful
    "SLF001",  # Private member access
    "PLC0415", # Imports should be at the top. Not always desirable
    "PLR0913", # Too many arguments in function definition
    "PLC0414", # Inconsistent with how type checkers expect to be notified of intentional re-exports
    "C901",    # Too complex
    "PLR2004", # Magic values in comparisons (common in tests)
    "DTZ",     # Datetime without timezone (not always needed)
    "FBT",     # Boolean positional arguments (common pattern)
]
unfixable = ["B028"]  # Rules that shouldn't be auto-fixed

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true

[tool.ruff.lint.pydocstyle]
convention = "google"  # Google-style docstrings
ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/*" = [
    "D1",      # Skip documentation rules in tests
    "S101",    # Allow asserts in tests
    "S311",    # Allow pseudo-random generators in tests
    "ANN",     # Skip type annotations in tests
    "RUF012",  # Allow mutable class attributes in tests
]
"examples/*" = [
    "D",       # Skip documentation rules in examples
    "INP001",  # Examples don't need __init__.py
    "E501",    # Allow longer lines in examples
    "FBT",     # Allow boolean positional arguments in examples
    "ANN",     # Skip type annotations in examples
]

